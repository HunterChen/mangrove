<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classmongo__odm_1_1boolean__expr" kind="class" language="C++" prot="public">
    <compoundname>mongo_odm::boolean_expr</compoundname>
    <includes refid="query__builder_8hpp" local="no">query_builder.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename Expr1</type>
      </param>
      <param>
        <type>typename Expr2</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classmongo__odm_1_1boolean__expr_1ac7b2a2bed1d4f5063d658bc2f79066d9" prot="public" static="no" mutable="no">
        <type>const Expr1</type>
        <definition>const Expr1 mongo_odm::boolean_expr&lt; Expr1, Expr2 &gt;::_lhs</definition>
        <argsstring></argsstring>
        <name>_lhs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/mongo_odm/query_builder.hpp" line="610" column="1" bodyfile="src/mongo_odm/query_builder.hpp" bodystart="610" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmongo__odm_1_1boolean__expr_1afcfb25e5853006a1cb48e0fb3b6753d3" prot="public" static="no" mutable="no">
        <type>const Expr2</type>
        <definition>const Expr2 mongo_odm::boolean_expr&lt; Expr1, Expr2 &gt;::_rhs</definition>
        <argsstring></argsstring>
        <name>_rhs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/mongo_odm/query_builder.hpp" line="611" column="1" bodyfile="src/mongo_odm/query_builder.hpp" bodystart="611" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmongo__odm_1_1boolean__expr_1af87986a67c31595d1f6185a7c3b573d1" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* mongo_odm::boolean_expr&lt; Expr1, Expr2 &gt;::_op</definition>
        <argsstring></argsstring>
        <name>_op</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/mongo_odm/query_builder.hpp" line="612" column="1" bodyfile="src/mongo_odm/query_builder.hpp" bodystart="612" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmongo__odm_1_1boolean__expr_1a78c7a59f9f857fe8d5609493f155d96a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr mongo_odm::boolean_expr&lt; Expr1, Expr2 &gt;::boolean_expr</definition>
        <argsstring>(const Expr1 &amp;lhs, const Expr2 &amp;rhs, const char *op)</argsstring>
        <name>boolean_expr</name>
        <param>
          <type>const Expr1 &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const Expr2 &amp;</type>
          <declname>rhs</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>op</declname>
        </param>
        <briefdescription>
<para>Constructs a boolean expression from two other expressions, and a certain operator. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lhs</parametername>
</parameternamelist>
<parameterdescription>
<para>The left-hand side of the expression. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rhs</parametername>
</parameternamelist>
<parameterdescription>
<para>The right-hand side of the expression. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>op</parametername>
</parameternamelist>
<parameterdescription>
<para>The operator of the expression, e.g. AND or OR. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/mongo_odm/query_builder.hpp" line="566" column="1" bodyfile="src/mongo_odm/query_builder.hpp" bodystart="566" bodyend="568"/>
      </memberdef>
      <memberdef kind="function" id="classmongo__odm_1_1boolean__expr_1ad74cd57820615fe960f4489af2091bbd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void mongo_odm::boolean_expr&lt; Expr1, Expr2 &gt;::append_to_bson</definition>
        <argsstring>(bsoncxx::builder::core &amp;builder, bool wrap=false) const </argsstring>
        <name>append_to_bson</name>
        <param>
          <type>bsoncxx::builder::core &amp;</type>
          <declname>builder</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>wrap</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Appends this query to a BSON core builder as a key-value pair &quot;$op: [{lhs}, {rhs}]&quot;. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>builder</parametername>
</parameternamelist>
<parameterdescription>
<para>A basic BSON core builder. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Whether</parametername>
</parameternamelist>
<parameterdescription>
<para>to wrap this expression inside a document. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/mongo_odm/query_builder.hpp" line="575" column="1" bodyfile="src/mongo_odm/query_builder.hpp" bodystart="575" bodyend="598"/>
      </memberdef>
      <memberdef kind="function" id="classmongo__odm_1_1boolean__expr_1af5fb062846c5f8fb95a8333ad9723006" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>mongo_odm::boolean_expr&lt; Expr1, Expr2 &gt;::operator bsoncxx::document::view_or_value</definition>
        <argsstring>() const </argsstring>
        <name>operator bsoncxx::document::view_or_value</name>
        <briefdescription>
<para>Converts the expression to a BSON filter for a query, in the form &quot;{ $op: [{lhs}, {rhs}] }&quot;. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/mongo_odm/query_builder.hpp" line="604" column="1" bodyfile="src/mongo_odm/query_builder.hpp" bodystart="604" bodyend="608"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This represents a boolean expression with two arguments. </para>    </briefdescription>
    <detaileddescription>
<para>The arguments can, in turn, be boolean expressions. </para>    </detaileddescription>
    <location file="src/mongo_odm/expression_syntax.hpp" line="68" column="1" bodyfile="src/mongo_odm/expression_syntax.hpp" bodystart="68" bodyend="-1"/>
    <listofallmembers>
      <member refid="classmongo__odm_1_1boolean__expr_1ac7b2a2bed1d4f5063d658bc2f79066d9" prot="public" virt="non-virtual"><scope>mongo_odm::boolean_expr</scope><name>_lhs</name></member>
      <member refid="classmongo__odm_1_1boolean__expr_1af87986a67c31595d1f6185a7c3b573d1" prot="public" virt="non-virtual"><scope>mongo_odm::boolean_expr</scope><name>_op</name></member>
      <member refid="classmongo__odm_1_1boolean__expr_1afcfb25e5853006a1cb48e0fb3b6753d3" prot="public" virt="non-virtual"><scope>mongo_odm::boolean_expr</scope><name>_rhs</name></member>
      <member refid="classmongo__odm_1_1boolean__expr_1ad74cd57820615fe960f4489af2091bbd" prot="public" virt="non-virtual"><scope>mongo_odm::boolean_expr</scope><name>append_to_bson</name></member>
      <member refid="classmongo__odm_1_1boolean__expr_1a78c7a59f9f857fe8d5609493f155d96a" prot="public" virt="non-virtual"><scope>mongo_odm::boolean_expr</scope><name>boolean_expr</name></member>
      <member refid="classmongo__odm_1_1boolean__expr_1af5fb062846c5f8fb95a8333ad9723006" prot="public" virt="non-virtual"><scope>mongo_odm::boolean_expr</scope><name>operator bsoncxx::document::view_or_value</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
