<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classbson__mapper_1_1BSONInputArchive" kind="class" language="C++" prot="public">
    <compoundname>bson_mapper::BSONInputArchive</compoundname>
    <basecompoundref prot="public" virt="non-virtual">cereal::InputArchive&lt; BSONInputArchive &gt;</basecompoundref>
      <sectiondef kind="private-type">
      <memberdef kind="enum" id="classbson__mapper_1_1BSONInputArchive_1aafd8477cdeea393e5a2bc0640635d1f3" prot="private" static="no">
        <name>InputNodeType</name>
        <enumvalue id="classbson__mapper_1_1BSONInputArchive_1aafd8477cdeea393e5a2bc0640635d1f3adaff60416e9ab0d467514f2ceec55d2b" prot="private">
          <name>InObject</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classbson__mapper_1_1BSONInputArchive_1aafd8477cdeea393e5a2bc0640635d1f3a53c55f2d410e0ecdc77028764957eb05" prot="private">
          <name>InEmbeddedObject</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classbson__mapper_1_1BSONInputArchive_1aafd8477cdeea393e5a2bc0640635d1f3aec605dceae057b8afe96012584061e42" prot="private">
          <name>InEmbeddedArray</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classbson__mapper_1_1BSONInputArchive_1aafd8477cdeea393e5a2bc0640635d1f3ac681db7d5f639e112892d2ce9a67a536" prot="private">
          <name>InRootElement</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/bson_mapper/bson_archiver.hpp" line="461" column="1" bodyfile="src/bson_mapper/bson_archiver.hpp" bodystart="461" bodyend="461"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classbson__mapper_1_1BSONInputArchive_1a539f11876fc0111fa43e28d350882546" prot="private" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* bson_mapper::BSONInputArchive::_nextName</definition>
        <argsstring></argsstring>
        <name>_nextName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/bson_mapper/bson_archiver.hpp" line="893" column="1" bodyfile="src/bson_mapper/bson_archiver.hpp" bodystart="893" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbson__mapper_1_1BSONInputArchive_1a99f2007a5e468d52c196c46340ef951a" prot="private" static="no" mutable="no">
        <type>std::istream &amp;</type>
        <definition>std::istream&amp; bson_mapper::BSONInputArchive::_readStream</definition>
        <argsstring></argsstring>
        <name>_readStream</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/bson_mapper/bson_archiver.hpp" line="896" column="1" bodyfile="src/bson_mapper/bson_archiver.hpp" bodystart="896" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbson__mapper_1_1BSONInputArchive_1a227df2db32e2631d38c4fc714850c81d" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool bson_mapper::BSONInputArchive::_readFirstDoc</definition>
        <argsstring></argsstring>
        <name>_readFirstDoc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/bson_mapper/bson_archiver.hpp" line="899" column="1" bodyfile="src/bson_mapper/bson_archiver.hpp" bodystart="899" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbson__mapper_1_1BSONInputArchive_1a2764478a217acc134530c36728af5523" prot="private" static="no" mutable="no">
        <type>stdx::optional&lt; bsoncxx::types::value &gt;</type>
        <definition>stdx::optional&lt;bsoncxx::types::value&gt; bson_mapper::BSONInputArchive::_cachedSearchResult</definition>
        <argsstring></argsstring>
        <name>_cachedSearchResult</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/bson_mapper/bson_archiver.hpp" line="902" column="1" bodyfile="src/bson_mapper/bson_archiver.hpp" bodystart="902" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbson__mapper_1_1BSONInputArchive_1a199bd76a66229f613e1a891d20b9ada3" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; uint8_t &gt;</type>
        <definition>std::shared_ptr&lt;uint8_t&gt; bson_mapper::BSONInputArchive::_curBsonData</definition>
        <argsstring></argsstring>
        <name>_curBsonData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/bson_mapper/bson_archiver.hpp" line="905" column="1" bodyfile="src/bson_mapper/bson_archiver.hpp" bodystart="905" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbson__mapper_1_1BSONInputArchive_1a65b460899abfbd69356d20bc43181fb1" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t bson_mapper::BSONInputArchive::_curBsonDataSize</definition>
        <argsstring></argsstring>
        <name>_curBsonDataSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/bson_mapper/bson_archiver.hpp" line="906" column="1" bodyfile="src/bson_mapper/bson_archiver.hpp" bodystart="906" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbson__mapper_1_1BSONInputArchive_1ae4ed085179302884862b1637461b9eb7" prot="private" static="no" mutable="no">
        <type>bsoncxx::document::view</type>
        <definition>bsoncxx::document::view bson_mapper::BSONInputArchive::_curBsonDoc</definition>
        <argsstring></argsstring>
        <name>_curBsonDoc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/bson_mapper/bson_archiver.hpp" line="907" column="1" bodyfile="src/bson_mapper/bson_archiver.hpp" bodystart="907" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbson__mapper_1_1BSONInputArchive_1a7894605ce1c2e69da4c1b54c84d08601" prot="private" static="no" mutable="no">
        <type>std::stack&lt; bsoncxx::document::view &gt;</type>
        <definition>std::stack&lt;bsoncxx::document::view&gt; bson_mapper::BSONInputArchive::_embeddedBsonDocStack</definition>
        <argsstring></argsstring>
        <name>_embeddedBsonDocStack</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/bson_mapper/bson_archiver.hpp" line="910" column="1" bodyfile="src/bson_mapper/bson_archiver.hpp" bodystart="910" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbson__mapper_1_1BSONInputArchive_1a17e97ec5437e8993474f65172465b3c1" prot="private" static="no" mutable="no">
        <type>std::stack&lt; bsoncxx::array::view &gt;</type>
        <definition>std::stack&lt;bsoncxx::array::view&gt; bson_mapper::BSONInputArchive::_embeddedBsonArrayStack</definition>
        <argsstring></argsstring>
        <name>_embeddedBsonArrayStack</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/bson_mapper/bson_archiver.hpp" line="914" column="1" bodyfile="src/bson_mapper/bson_archiver.hpp" bodystart="914" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbson__mapper_1_1BSONInputArchive_1ad73dff393d7e51d512b43b8eaaf2944c" prot="private" static="no" mutable="no">
        <type>std::stack&lt; bsoncxx::array::view::iterator &gt;</type>
        <definition>std::stack&lt;bsoncxx::array::view::iterator&gt; bson_mapper::BSONInputArchive::_embeddedBsonArrayIteratorStack</definition>
        <argsstring></argsstring>
        <name>_embeddedBsonArrayIteratorStack</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/bson_mapper/bson_archiver.hpp" line="915" column="1" bodyfile="src/bson_mapper/bson_archiver.hpp" bodystart="915" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbson__mapper_1_1BSONInputArchive_1ab23b53d7894fd540b41246cbdb13bb7e" prot="private" static="no" mutable="no">
        <type>std::stack&lt; InputNodeType &gt;</type>
        <definition>std::stack&lt;InputNodeType&gt; bson_mapper::BSONInputArchive::_nodeTypeStack</definition>
        <argsstring></argsstring>
        <name>_nodeTypeStack</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/bson_mapper/bson_archiver.hpp" line="918" column="1" bodyfile="src/bson_mapper/bson_archiver.hpp" bodystart="918" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classbson__mapper_1_1BSONInputArchive_1a6b8ddbbd18800ef0f8e250c31da095e8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>bson_mapper::BSONInputArchive::BSONInputArchive</definition>
        <argsstring>(std::istream &amp;stream)</argsstring>
        <name>BSONInputArchive</name>
        <param>
          <type>std::istream &amp;</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
<para>Construct a <ref refid="classbson__mapper_1_1BSONInputArchive" kindref="compound">BSONInputArchive</ref> from an input stream of BSON data. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>stream</parametername>
</parameternamelist>
<parameterdescription>
<para>The stream from which to read BSON data. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/bson_mapper/bson_archiver.hpp" line="470" column="1" bodyfile="src/bson_mapper/bson_archiver.hpp" bodystart="470" bodyend="475"/>
      </memberdef>
      <memberdef kind="function" id="classbson__mapper_1_1BSONInputArchive_1a0b8d043db14caa7d4e35d8e5300cd69f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool bson_mapper::BSONInputArchive::willSearchYieldValue</definition>
        <argsstring>()</argsstring>
        <name>willSearchYieldValue</name>
        <briefdescription>
<para>Checks if the next invocation of search() will yield a value. </para>        </briefdescription>
        <detaileddescription>
<para>Used to check if a particular optional element, embedded document, or embedded array exists.</para><para>If search() would indeed return a value, it is cached here so that the logic in search() will not need to be repeated.</para><para><simplesect kind="return"><para>true if the next invocation of search with the current _nextName yields a value, false otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/bson_mapper/bson_archiver.hpp" line="601" column="1" bodyfile="src/bson_mapper/bson_archiver.hpp" bodystart="601" bodyend="640"/>
      </memberdef>
      <memberdef kind="function" id="classbson__mapper_1_1BSONInputArchive_1ab0b224d34f6dd2fd9ee542571536638b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool bson_mapper::BSONInputArchive::startRootElementIfRoot</definition>
        <argsstring>()</argsstring>
        <name>startRootElementIfRoot</name>
        <briefdescription>
<para>Pushes a root element on the node stack if we&apos;re in root. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if a root element was created, false otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/bson_mapper/bson_archiver.hpp" line="647" column="1" bodyfile="src/bson_mapper/bson_archiver.hpp" bodystart="647" bodyend="654"/>
      </memberdef>
      <memberdef kind="function" id="classbson__mapper_1_1BSONInputArchive_1a1100f99901973ebefab2198d2381e953" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void bson_mapper::BSONInputArchive::finishRootElementIfRootElement</definition>
        <argsstring>()</argsstring>
        <name>finishRootElementIfRootElement</name>
        <briefdescription>
<para>Pops the node stack and iterates to the next BSON view if the top of the stack specifies that we are in a root element. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/bson_mapper/bson_archiver.hpp" line="660" column="1" bodyfile="src/bson_mapper/bson_archiver.hpp" bodystart="660" bodyend="664"/>
      </memberdef>
      <memberdef kind="function" id="classbson__mapper_1_1BSONInputArchive_1a6f74b53f0989e9222be00dec0e6d350f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void bson_mapper::BSONInputArchive::startNode</definition>
        <argsstring>()</argsstring>
        <name>startNode</name>
        <briefdescription>
<para>Starts a new node, and update the stacks so that we fetch the correct data when calling search(). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/bson_mapper/bson_archiver.hpp" line="670" column="1" bodyfile="src/bson_mapper/bson_archiver.hpp" bodystart="670" bodyend="713"/>
      </memberdef>
      <memberdef kind="function" id="classbson__mapper_1_1BSONInputArchive_1a9360961eba7c7c430329eed30667a2de" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void bson_mapper::BSONInputArchive::finishNode</definition>
        <argsstring>()</argsstring>
        <name>finishNode</name>
        <briefdescription>
<para>Finishes the most recently started node by popping relevant stacks and, if necessary, iterating to the next root BSON document. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/bson_mapper/bson_archiver.hpp" line="719" column="1" bodyfile="src/bson_mapper/bson_archiver.hpp" bodystart="719" bodyend="735"/>
      </memberdef>
      <memberdef kind="function" id="classbson__mapper_1_1BSONInputArchive_1a5536f703a1f8d0f19fca666290ee6b42" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void bson_mapper::BSONInputArchive::setNextName</definition>
        <argsstring>(const char *name)</argsstring>
        <name>setNextName</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Sets the name for the next node created with startNode. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the next node </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/bson_mapper/bson_archiver.hpp" line="743" column="1" bodyfile="src/bson_mapper/bson_archiver.hpp" bodystart="743" bodyend="745"/>
      </memberdef>
      <memberdef kind="function" id="classbson__mapper_1_1BSONInputArchive_1a457680690d03b26a9600b9139d1b9bd9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void bson_mapper::BSONInputArchive::loadValue</definition>
        <argsstring>(std::chrono::system_clock::time_point &amp;val)</argsstring>
        <name>loadValue</name>
        <param>
          <type>std::chrono::system_clock::time_point &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Loads a BSON datetime from the current node and puts it into a std::chrono::system_clock::time_point. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>The time_point variable into which the datetime will be loaded. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/bson_mapper/bson_archiver.hpp" line="824" column="1" bodyfile="src/bson_mapper/bson_archiver.hpp" bodystart="824" bodyend="829"/>
      </memberdef>
      <memberdef kind="function" id="classbson__mapper_1_1BSONInputArchive_1afa63fee8fca6808c51178fb6a7767abd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void bson_mapper::BSONInputArchive::loadValue</definition>
        <argsstring>(std::string &amp;val)</argsstring>
        <name>loadValue</name>
        <param>
          <type>std::string &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Loads a BSON UTF-8 value from the current node and puts it into a std::string. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>The std::string variable into which the UTF-8 will be loaded. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/bson_mapper/bson_archiver.hpp" line="837" column="1" bodyfile="src/bson_mapper/bson_archiver.hpp" bodystart="837" bodyend="841"/>
      </memberdef>
      <memberdef kind="function" id="classbson__mapper_1_1BSONInputArchive_1a28c16081fe45749c56f5d65b1ab01d40" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void bson_mapper::BSONInputArchive::loadSize</definition>
        <argsstring>(cereal::size_type &amp;size)</argsstring>
        <name>loadSize</name>
        <param>
          <type>cereal::size_type &amp;</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Loads the size for a SizeTag, which is used by Cereal to determine how many elements to put into a container such as a std::vector. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>A reference to the size value that will be set to the size of the array at the top of the stack. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/bson_mapper/bson_archiver.hpp" line="851" column="1" bodyfile="src/bson_mapper/bson_archiver.hpp" bodystart="851" bodyend="857"/>
      </memberdef>
      <memberdef kind="function" id="classbson__mapper_1_1BSONInputArchive_1ad3fae22817ce463e8a3055a1f04e7a91" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void bson_mapper::BSONInputArchive::loadUnderlyingDataForCurrentNode</definition>
        <argsstring>(UnderlyingBSONDataBase &amp;underlyingData)</argsstring>
        <name>loadUnderlyingDataForCurrentNode</name>
        <param>
          <type><ref refid="classbson__mapper_1_1UnderlyingBSONDataBase" kindref="compound">UnderlyingBSONDataBase</ref> &amp;</type>
          <declname>underlyingData</declname>
        </param>
        <briefdescription>
<para>Returns a shared pointer to the underlying data of the current node, loading the size in bytes in a size_t reference argument. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/bson_mapper/bson_archiver.hpp" line="863" column="1" bodyfile="src/bson_mapper/bson_archiver.hpp" bodystart="863" bodyend="889"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classbson__mapper_1_1BSONInputArchive_1a1592bc712c69190fb10ce57fe84a4453" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void bson_mapper::BSONInputArchive::readNextDoc</definition>
        <argsstring>()</argsstring>
        <name>readNextDoc</name>
        <briefdescription>
<para>Reads the next BSON document from the istream. </para>        </briefdescription>
        <detaileddescription>
<para>This should be called whenever we are starting to load in a root element or root node. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/bson_mapper/bson_archiver.hpp" line="482" column="1" bodyfile="src/bson_mapper/bson_archiver.hpp" bodystart="482" bodyend="515"/>
      </memberdef>
      <memberdef kind="function" id="classbson__mapper_1_1BSONInputArchive_1aac41a653859be589d83d5d3782c8033b" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bsoncxx::types::value</type>
        <definition>bsoncxx::types::value bson_mapper::BSONInputArchive::search</definition>
        <argsstring>()</argsstring>
        <name>search</name>
        <briefdescription>
<para>Searches for the next BSON element to be retrieved and loaded. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The element with _nextName as a key, or if the current node is an array, the next element in that array. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/bson_mapper/bson_archiver.hpp" line="523" column="1" bodyfile="src/bson_mapper/bson_archiver.hpp" bodystart="523" bodyend="588"/>
      </memberdef>
      <memberdef kind="function" id="classbson__mapper_1_1BSONInputArchive_1ae037bcfc8881678b75c606f3643e1f2a" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void bson_mapper::BSONInputArchive::assert_type</definition>
        <argsstring>(const bsoncxx::types::value &amp;v, bsoncxx::type t)</argsstring>
        <name>assert_type</name>
        <param>
          <type>const bsoncxx::types::value &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>bsoncxx::type</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Throws an exception if the type of v is not the specified type t. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/bson_mapper/bson_archiver.hpp" line="751" column="1" bodyfile="src/bson_mapper/bson_archiver.hpp" bodystart="751" bodyend="755"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="37">
        <label>cereal::InputArchive&lt; BSONInputArchive &gt;</label>
      </node>
      <node id="36">
        <label>bson_mapper::BSONInputArchive</label>
        <link refid="classbson__mapper_1_1BSONInputArchive"/>
        <childnode refid="37" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="39">
        <label>cereal::InputArchive&lt; BSONInputArchive &gt;</label>
      </node>
      <node id="38">
        <label>bson_mapper::BSONInputArchive</label>
        <link refid="classbson__mapper_1_1BSONInputArchive"/>
        <childnode refid="39" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/bson_mapper/bson_archiver.hpp" line="460" column="1" bodyfile="src/bson_mapper/bson_archiver.hpp" bodystart="460" bodyend="920"/>
    <listofallmembers>
      <member refid="classbson__mapper_1_1BSONInputArchive_1a2764478a217acc134530c36728af5523" prot="private" virt="non-virtual"><scope>bson_mapper::BSONInputArchive</scope><name>_cachedSearchResult</name></member>
      <member refid="classbson__mapper_1_1BSONInputArchive_1a199bd76a66229f613e1a891d20b9ada3" prot="private" virt="non-virtual"><scope>bson_mapper::BSONInputArchive</scope><name>_curBsonData</name></member>
      <member refid="classbson__mapper_1_1BSONInputArchive_1a65b460899abfbd69356d20bc43181fb1" prot="private" virt="non-virtual"><scope>bson_mapper::BSONInputArchive</scope><name>_curBsonDataSize</name></member>
      <member refid="classbson__mapper_1_1BSONInputArchive_1ae4ed085179302884862b1637461b9eb7" prot="private" virt="non-virtual"><scope>bson_mapper::BSONInputArchive</scope><name>_curBsonDoc</name></member>
      <member refid="classbson__mapper_1_1BSONInputArchive_1ad73dff393d7e51d512b43b8eaaf2944c" prot="private" virt="non-virtual"><scope>bson_mapper::BSONInputArchive</scope><name>_embeddedBsonArrayIteratorStack</name></member>
      <member refid="classbson__mapper_1_1BSONInputArchive_1a17e97ec5437e8993474f65172465b3c1" prot="private" virt="non-virtual"><scope>bson_mapper::BSONInputArchive</scope><name>_embeddedBsonArrayStack</name></member>
      <member refid="classbson__mapper_1_1BSONInputArchive_1a7894605ce1c2e69da4c1b54c84d08601" prot="private" virt="non-virtual"><scope>bson_mapper::BSONInputArchive</scope><name>_embeddedBsonDocStack</name></member>
      <member refid="classbson__mapper_1_1BSONInputArchive_1a539f11876fc0111fa43e28d350882546" prot="private" virt="non-virtual"><scope>bson_mapper::BSONInputArchive</scope><name>_nextName</name></member>
      <member refid="classbson__mapper_1_1BSONInputArchive_1ab23b53d7894fd540b41246cbdb13bb7e" prot="private" virt="non-virtual"><scope>bson_mapper::BSONInputArchive</scope><name>_nodeTypeStack</name></member>
      <member refid="classbson__mapper_1_1BSONInputArchive_1a227df2db32e2631d38c4fc714850c81d" prot="private" virt="non-virtual"><scope>bson_mapper::BSONInputArchive</scope><name>_readFirstDoc</name></member>
      <member refid="classbson__mapper_1_1BSONInputArchive_1a99f2007a5e468d52c196c46340ef951a" prot="private" virt="non-virtual"><scope>bson_mapper::BSONInputArchive</scope><name>_readStream</name></member>
      <member refid="classbson__mapper_1_1BSONInputArchive_1ae037bcfc8881678b75c606f3643e1f2a" prot="private" virt="non-virtual"><scope>bson_mapper::BSONInputArchive</scope><name>assert_type</name></member>
      <member refid="classbson__mapper_1_1BSONInputArchive_1a6b8ddbbd18800ef0f8e250c31da095e8" prot="public" virt="non-virtual"><scope>bson_mapper::BSONInputArchive</scope><name>BSONInputArchive</name></member>
      <member refid="classbson__mapper_1_1BSONInputArchive_1a9360961eba7c7c430329eed30667a2de" prot="public" virt="non-virtual"><scope>bson_mapper::BSONInputArchive</scope><name>finishNode</name></member>
      <member refid="classbson__mapper_1_1BSONInputArchive_1a1100f99901973ebefab2198d2381e953" prot="public" virt="non-virtual"><scope>bson_mapper::BSONInputArchive</scope><name>finishRootElementIfRootElement</name></member>
      <member refid="classbson__mapper_1_1BSONInputArchive_1aafd8477cdeea393e5a2bc0640635d1f3" prot="private" virt="non-virtual"><scope>bson_mapper::BSONInputArchive</scope><name>InputNodeType</name></member>
      <member refid="classbson__mapper_1_1BSONInputArchive_1a28c16081fe45749c56f5d65b1ab01d40" prot="public" virt="non-virtual"><scope>bson_mapper::BSONInputArchive</scope><name>loadSize</name></member>
      <member refid="classbson__mapper_1_1BSONInputArchive_1ad3fae22817ce463e8a3055a1f04e7a91" prot="public" virt="non-virtual"><scope>bson_mapper::BSONInputArchive</scope><name>loadUnderlyingDataForCurrentNode</name></member>
      <member refid="classbson__mapper_1_1BSONInputArchive_1a457680690d03b26a9600b9139d1b9bd9" prot="public" virt="non-virtual"><scope>bson_mapper::BSONInputArchive</scope><name>loadValue</name></member>
      <member refid="classbson__mapper_1_1BSONInputArchive_1afa63fee8fca6808c51178fb6a7767abd" prot="public" virt="non-virtual"><scope>bson_mapper::BSONInputArchive</scope><name>loadValue</name></member>
      <member refid="classbson__mapper_1_1BSONInputArchive_1a1592bc712c69190fb10ce57fe84a4453" prot="private" virt="non-virtual"><scope>bson_mapper::BSONInputArchive</scope><name>readNextDoc</name></member>
      <member refid="classbson__mapper_1_1BSONInputArchive_1aac41a653859be589d83d5d3782c8033b" prot="private" virt="non-virtual"><scope>bson_mapper::BSONInputArchive</scope><name>search</name></member>
      <member refid="classbson__mapper_1_1BSONInputArchive_1a5536f703a1f8d0f19fca666290ee6b42" prot="public" virt="non-virtual"><scope>bson_mapper::BSONInputArchive</scope><name>setNextName</name></member>
      <member refid="classbson__mapper_1_1BSONInputArchive_1a6f74b53f0989e9222be00dec0e6d350f" prot="public" virt="non-virtual"><scope>bson_mapper::BSONInputArchive</scope><name>startNode</name></member>
      <member refid="classbson__mapper_1_1BSONInputArchive_1ab0b224d34f6dd2fd9ee542571536638b" prot="public" virt="non-virtual"><scope>bson_mapper::BSONInputArchive</scope><name>startRootElementIfRoot</name></member>
      <member refid="classbson__mapper_1_1BSONInputArchive_1a0b8d043db14caa7d4e35d8e5300cd69f" prot="public" virt="non-virtual"><scope>bson_mapper::BSONInputArchive</scope><name>willSearchYieldValue</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
