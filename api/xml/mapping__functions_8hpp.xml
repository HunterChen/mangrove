<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="mapping__functions_8hpp" kind="file" language="C++">
    <compoundname>mapping_functions.hpp</compoundname>
    <includes refid="bson__mapper_2config_2prelude_8hpp" local="no">bson_mapper/config/prelude.hpp</includes>
    <includes local="no">iostream</includes>
    <includes local="no">bsoncxx/builder/basic/document.hpp</includes>
    <includes local="no">bsoncxx/stdx/optional.hpp</includes>
    <includes refid="bson__archiver_8hpp" local="no">bson_mapper/bson_archiver.hpp</includes>
    <includes refid="bson__streambuf_8hpp" local="no">bson_mapper/bson_streambuf.hpp</includes>
    <includes refid="bson__mapper_2config_2postlude_8hpp" local="no">bson_mapper/config/postlude.hpp</includes>
    <includedby refid="deserializing__cursor_8hpp" local="no">src/mongo_odm/deserializing_cursor.hpp</includedby>
    <includedby refid="odm__collection_8hpp" local="no">src/mongo_odm/odm_collection.hpp</includedby>
    <incdepgraph>
      <node id="120">
        <label>bsoncxx/builder/core.hpp</label>
      </node>
      <node id="103">
        <label>src/bson_mapper/mapping_functions.hpp</label>
        <link refid="mapping_functions.hpp"/>
        <childnode refid="104" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="110" relation="include">
        </childnode>
        <childnode refid="111" relation="include">
        </childnode>
        <childnode refid="112" relation="include">
        </childnode>
        <childnode refid="124" relation="include">
        </childnode>
        <childnode refid="130" relation="include">
        </childnode>
      </node>
      <node id="130">
        <label>bson_mapper/config/postlude.hpp</label>
        <link refid="bson__mapper_2config_2postlude_8hpp_source"/>
      </node>
      <node id="111">
        <label>bsoncxx/stdx/optional.hpp</label>
      </node>
      <node id="124">
        <label>bson_mapper/bson_streambuf.hpp</label>
        <link refid="bson__streambuf_8hpp_source"/>
        <childnode refid="104" relation="include">
        </childnode>
        <childnode refid="125" relation="include">
        </childnode>
        <childnode refid="126" relation="include">
        </childnode>
        <childnode refid="127" relation="include">
        </childnode>
        <childnode refid="128" relation="include">
        </childnode>
        <childnode refid="129" relation="include">
        </childnode>
        <childnode refid="130" relation="include">
        </childnode>
      </node>
      <node id="117">
        <label>string</label>
      </node>
      <node id="110">
        <label>bsoncxx/builder/basic/document.hpp</label>
      </node>
      <node id="123">
        <label>bson_mapper/stdx/optional.hpp</label>
        <link refid="optional_8hpp_source"/>
        <childnode refid="111" relation="include">
        </childnode>
      </node>
      <node id="112">
        <label>bson_mapper/bson_archiver.hpp</label>
        <link refid="bson__archiver_8hpp_source"/>
        <childnode refid="113" relation="include">
        </childnode>
        <childnode refid="114" relation="include">
        </childnode>
        <childnode refid="115" relation="include">
        </childnode>
        <childnode refid="116" relation="include">
        </childnode>
        <childnode refid="117" relation="include">
        </childnode>
        <childnode refid="118" relation="include">
        </childnode>
        <childnode refid="119" relation="include">
        </childnode>
        <childnode refid="120" relation="include">
        </childnode>
        <childnode refid="121" relation="include">
        </childnode>
        <childnode refid="122" relation="include">
        </childnode>
        <childnode refid="123" relation="include">
        </childnode>
      </node>
      <node id="126">
        <label>ostream</label>
      </node>
      <node id="128">
        <label>bsoncxx/builder/stream/document.hpp</label>
      </node>
      <node id="105">
        <label>bson_mapper/config/compiler.hpp</label>
        <link refid="bson__mapper_2config_2compiler_8hpp_source"/>
      </node>
      <node id="122">
        <label>bsoncxx/types/value.hpp</label>
      </node>
      <node id="106">
        <label>bson_mapper/config/config.hpp</label>
      </node>
      <node id="118">
        <label>vector</label>
      </node>
      <node id="116">
        <label>stack</label>
      </node>
      <node id="121">
        <label>bsoncxx/types.hpp</label>
      </node>
      <node id="127">
        <label>streambuf</label>
      </node>
      <node id="104">
        <label>bson_mapper/config/prelude.hpp</label>
        <link refid="bson__mapper_2config_2prelude_8hpp_source"/>
        <childnode refid="105" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
        <childnode refid="108" relation="include">
        </childnode>
      </node>
      <node id="115">
        <label>sstream</label>
      </node>
      <node id="119">
        <label>cereal/cereal.hpp</label>
      </node>
      <node id="109">
        <label>iostream</label>
      </node>
      <node id="113">
        <label>chrono</label>
      </node>
      <node id="108">
        <label>bson_mapper/config/version.hpp</label>
      </node>
      <node id="129">
        <label>bsoncxx/json.hpp</label>
      </node>
      <node id="107">
        <label>bson_mapper/config/export.hpp</label>
      </node>
      <node id="114">
        <label>memory</label>
      </node>
      <node id="125">
        <label>istream</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="133">
        <label>src/mongo_odm/odm_collection.hpp</label>
        <link refid="odm__collection_8hpp_source"/>
        <childnode refid="134" relation="include">
        </childnode>
      </node>
      <node id="131">
        <label>src/bson_mapper/mapping_functions.hpp</label>
        <link refid="mapping_functions.hpp"/>
        <childnode refid="132" relation="include">
        </childnode>
        <childnode refid="133" relation="include">
        </childnode>
      </node>
      <node id="132">
        <label>src/mongo_odm/deserializing_cursor.hpp</label>
        <link refid="deserializing__cursor_8hpp_source"/>
        <childnode refid="133" relation="include">
        </childnode>
      </node>
      <node id="134">
        <label>src/mongo_odm/model.hpp</label>
        <link refid="model_8hpp_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classbson__mapper_1_1serializing__iterator" prot="public">bson_mapper::serializing_iterator</innerclass>
    <innernamespace refid="namespacebson__mapper">bson_mapper</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2016<sp/>MongoDB<sp/>Inc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;bson_mapper/config/prelude.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;bsoncxx/builder/basic/document.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;bsoncxx/stdx/optional.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;bson_mapper/bson_archiver.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;bson_mapper/bson_streambuf.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacebson__mapper" kindref="compound">bson_mapper</ref><sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal">BSON_MAPPER_INLINE_NAMESPACE_BEGIN</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="39"><highlight class="normal">bsoncxx::document::value<sp/>to_document(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>obj)<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>bsoncxx::stdx::optional&lt;bsoncxx::document::value&gt;<sp/>doc;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>bson_ostream<sp/>bos([&amp;doc](bsoncxx::document::value<sp/>v)<sp/>{<sp/>doc<sp/>=<sp/>std::move(v);<sp/>});</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>BSONOutputArchive<sp/>archive(bos);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>archive(obj);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>doc.value();</highlight></codeline>
<codeline lineno="45"><highlight class="normal">}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="56"><highlight class="normal">bsoncxx::document::value<sp/>to_dotted_notation_document(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>obj)<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>bsoncxx::stdx::optional&lt;bsoncxx::document::value&gt;<sp/>doc;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>bson_ostream<sp/>bos([&amp;doc](bsoncxx::document::value<sp/>v)<sp/>{<sp/>doc<sp/>=<sp/>std::move(v);<sp/>});</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>BSONOutputArchive<sp/>archive(bos,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>archive(obj);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>doc.value();</highlight></codeline>
<codeline lineno="62"><highlight class="normal">}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="75"><highlight class="normal">T<sp/>to_obj(bsoncxx::document::view<sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>static_assert(std::is_default_constructible&lt;T&gt;::value,</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Template<sp/>type<sp/>must<sp/>be<sp/>default<sp/>constructible&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classbson__mapper_1_1bson__istream" kindref="compound">bson_mapper::bson_istream</ref><sp/>bis(v);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classbson__mapper_1_1BSONInputArchive" kindref="compound">bson_mapper::BSONInputArchive</ref><sp/>archive(bis);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>obj;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>archive(obj);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>obj;</highlight></codeline>
<codeline lineno="83"><highlight class="normal">}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>to_obj(bsoncxx::document::view<sp/>v,<sp/>T&amp;<sp/>obj)<sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classbson__mapper_1_1bson__istream" kindref="compound">bson_mapper::bson_istream</ref><sp/>bis(v);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classbson__mapper_1_1BSONInputArchive" kindref="compound">bson_mapper::BSONInputArchive</ref><sp/>archive(bis);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>archive(obj);</highlight></codeline>
<codeline lineno="100"><highlight class="normal">}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="103"><highlight class="comment">*<sp/>This<sp/>function<sp/>converts<sp/>an<sp/>stdx::optional<sp/>containing<sp/>a<sp/>BSON<sp/>document<sp/>value<sp/>into<sp/>an</highlight></codeline>
<codeline lineno="104"><highlight class="comment">*<sp/>stdx::optional</highlight></codeline>
<codeline lineno="105"><highlight class="comment">*<sp/>containing<sp/>a<sp/>deserialized<sp/>object<sp/>of<sp/>the<sp/>templated<sp/>type.</highlight></codeline>
<codeline lineno="106"><highlight class="comment">*<sp/>@tparam<sp/>T<sp/>A<sp/>type<sp/>that<sp/>is<sp/>serializable<sp/>to<sp/>BSON<sp/>using<sp/>a<sp/>BSONArchiver.</highlight></codeline>
<codeline lineno="107"><highlight class="comment">*<sp/>@param<sp/>opt<sp/>An<sp/>optional<sp/>BSON<sp/>document<sp/>view</highlight></codeline>
<codeline lineno="108"><highlight class="comment">*<sp/>@return<sp/><sp/><sp/>An<sp/>optional<sp/>object<sp/>of<sp/>type<sp/>T</highlight></codeline>
<codeline lineno="109"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="111"><highlight class="normal">bsoncxx::stdx::optional&lt;T&gt;<sp/>to_optional_obj(</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>bsoncxx::stdx::optional&lt;bsoncxx::document::value&gt;&amp;<sp/>opt)<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(opt)<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>obj<sp/>=<sp/>to_obj&lt;T&gt;(opt.value().view());</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{obj};</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{};</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal">}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Iter&gt;</highlight></codeline>
<codeline lineno="129" refid="classbson__mapper_1_1serializing__iterator" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classbson__mapper_1_1serializing__iterator" kindref="compound">serializing_iterator</ref></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>std::iterator&lt;std::input_iterator_tag,<sp/>bsoncxx::document::value&gt;<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classbson__mapper_1_1serializing__iterator" kindref="compound">serializing_iterator</ref>(Iter<sp/>ci)<sp/>:<sp/>_ci(ci)<sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classbson__mapper_1_1serializing__iterator" kindref="compound">serializing_iterator</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classbson__mapper_1_1serializing__iterator" kindref="compound">serializing_iterator</ref>&amp;<sp/>si)<sp/>:<sp/>_ci(si._ci)<sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classbson__mapper_1_1serializing__iterator" kindref="compound">serializing_iterator</ref>&amp;<sp/>operator++()<sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++_ci;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>operator++(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>operator++();</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator==(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classbson__mapper_1_1serializing__iterator" kindref="compound">serializing_iterator</ref>&amp;<sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_ci<sp/>==<sp/>rhs._ci;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator!=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classbson__mapper_1_1serializing__iterator" kindref="compound">serializing_iterator</ref>&amp;<sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_ci<sp/>!=<sp/>rhs._ci;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>bsoncxx::document::value<sp/>operator*()<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>to_document(*_ci);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>Iter<sp/>_ci;</highlight></codeline>
<codeline lineno="161"><highlight class="normal">};</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal">BSON_MAPPER_INLINE_NAMESPACE_END</highlight></codeline>
<codeline lineno="164"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>bson_mapper</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;bson_mapper/config/postlude.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/bson_mapper/mapping_functions.hpp"/>
  </compounddef>
</doxygen>
