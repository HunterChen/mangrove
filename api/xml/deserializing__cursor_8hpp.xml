<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="deserializing__cursor_8hpp" kind="file" language="C++">
    <compoundname>deserializing_cursor.hpp</compoundname>
    <includes refid="mangrove_2config_2prelude_8hpp" local="no">mangrove/config/prelude.hpp</includes>
    <includes local="no">iostream</includes>
    <includes local="no">bsoncxx/builder/basic/document.hpp</includes>
    <includes local="no">bsoncxx/stdx/optional.hpp</includes>
    <includes local="no">mongocxx/cursor.hpp</includes>
    <includes refid="mapping__functions_8hpp" local="no">boson/mapping_functions.hpp</includes>
    <includes refid="mangrove_2config_2postlude_8hpp" local="no">mangrove/config/postlude.hpp</includes>
    <includedby refid="collection__wrapper_8hpp" local="no">src/mangrove/collection_wrapper.hpp</includedby>
    <incdepgraph>
      <node id="205">
        <label>mangrove/config/prelude.hpp</label>
        <link refid="mangrove_2config_2prelude_8hpp_source"/>
        <childnode refid="206" relation="include">
        </childnode>
        <childnode refid="207" relation="include">
        </childnode>
        <childnode refid="208" relation="include">
        </childnode>
        <childnode refid="209" relation="include">
        </childnode>
      </node>
      <node id="228">
        <label>bsoncxx/builder/core.hpp</label>
      </node>
      <node id="212">
        <label>bsoncxx/stdx/optional.hpp</label>
      </node>
      <node id="234">
        <label>cereal/types/list.hpp</label>
      </node>
      <node id="204">
        <label>src/mangrove/deserializing_cursor.hpp</label>
        <link refid="deserializing_cursor.hpp"/>
        <childnode refid="205" relation="include">
        </childnode>
        <childnode refid="210" relation="include">
        </childnode>
        <childnode refid="211" relation="include">
        </childnode>
        <childnode refid="212" relation="include">
        </childnode>
        <childnode refid="213" relation="include">
        </childnode>
        <childnode refid="214" relation="include">
        </childnode>
        <childnode refid="246" relation="include">
        </childnode>
      </node>
      <node id="218">
        <label>boson/config/export.hpp</label>
      </node>
      <node id="225">
        <label>string</label>
      </node>
      <node id="239">
        <label>boson/bson_streambuf.hpp</label>
        <link refid="bson__streambuf_8hpp_source"/>
        <childnode refid="215" relation="include">
        </childnode>
        <childnode refid="240" relation="include">
        </childnode>
        <childnode refid="241" relation="include">
        </childnode>
        <childnode refid="242" relation="include">
        </childnode>
        <childnode refid="243" relation="include">
        </childnode>
        <childnode refid="244" relation="include">
        </childnode>
        <childnode refid="245" relation="include">
        </childnode>
      </node>
      <node id="215">
        <label>boson/config/prelude.hpp</label>
        <link refid="boson_2config_2prelude_8hpp_source"/>
        <childnode refid="216" relation="include">
        </childnode>
        <childnode refid="217" relation="include">
        </childnode>
        <childnode refid="218" relation="include">
        </childnode>
        <childnode refid="219" relation="include">
        </childnode>
      </node>
      <node id="211">
        <label>bsoncxx/builder/basic/document.hpp</label>
      </node>
      <node id="246">
        <label>mangrove/config/postlude.hpp</label>
        <link refid="mangrove_2config_2postlude_8hpp_source"/>
      </node>
      <node id="241">
        <label>ostream</label>
      </node>
      <node id="220">
        <label>boson/bson_archiver.hpp</label>
        <link refid="bson__archiver_8hpp_source"/>
        <childnode refid="221" relation="include">
        </childnode>
        <childnode refid="222" relation="include">
        </childnode>
        <childnode refid="223" relation="include">
        </childnode>
        <childnode refid="224" relation="include">
        </childnode>
        <childnode refid="225" relation="include">
        </childnode>
        <childnode refid="226" relation="include">
        </childnode>
        <childnode refid="227" relation="include">
        </childnode>
        <childnode refid="228" relation="include">
        </childnode>
        <childnode refid="229" relation="include">
        </childnode>
        <childnode refid="230" relation="include">
        </childnode>
        <childnode refid="231" relation="include">
        </childnode>
        <childnode refid="232" relation="include">
        </childnode>
        <childnode refid="233" relation="include">
        </childnode>
        <childnode refid="234" relation="include">
        </childnode>
        <childnode refid="235" relation="include">
        </childnode>
        <childnode refid="236" relation="include">
        </childnode>
        <childnode refid="237" relation="include">
        </childnode>
        <childnode refid="238" relation="include">
        </childnode>
      </node>
      <node id="213">
        <label>mongocxx/cursor.hpp</label>
      </node>
      <node id="219">
        <label>boson/config/version.hpp</label>
      </node>
      <node id="232">
        <label>cereal/types/deque.hpp</label>
      </node>
      <node id="243">
        <label>bsoncxx/builder/stream/document.hpp</label>
      </node>
      <node id="231">
        <label>boson/stdx/optional.hpp</label>
        <link refid="optional_8hpp_source"/>
        <childnode refid="212" relation="include">
        </childnode>
      </node>
      <node id="235">
        <label>cereal/types/set.hpp</label>
      </node>
      <node id="230">
        <label>bsoncxx/types/value.hpp</label>
      </node>
      <node id="208">
        <label>mangrove/config/export.hpp</label>
      </node>
      <node id="214">
        <label>boson/mapping_functions.hpp</label>
        <link refid="mapping__functions_8hpp_source"/>
        <childnode refid="215" relation="include">
        </childnode>
        <childnode refid="210" relation="include">
        </childnode>
        <childnode refid="211" relation="include">
        </childnode>
        <childnode refid="212" relation="include">
        </childnode>
        <childnode refid="220" relation="include">
        </childnode>
        <childnode refid="239" relation="include">
        </childnode>
        <childnode refid="245" relation="include">
        </childnode>
      </node>
      <node id="226">
        <label>vector</label>
      </node>
      <node id="224">
        <label>stack</label>
      </node>
      <node id="229">
        <label>bsoncxx/types.hpp</label>
      </node>
      <node id="242">
        <label>streambuf</label>
      </node>
      <node id="236">
        <label>cereal/types/unordered_set.hpp</label>
      </node>
      <node id="237">
        <label>cereal/types/valarray.hpp</label>
      </node>
      <node id="223">
        <label>sstream</label>
      </node>
      <node id="227">
        <label>cereal/cereal.hpp</label>
      </node>
      <node id="216">
        <label>boson/config/compiler.hpp</label>
        <link refid="boson_2config_2compiler_8hpp_source"/>
      </node>
      <node id="210">
        <label>iostream</label>
      </node>
      <node id="233">
        <label>cereal/types/forward_list.hpp</label>
      </node>
      <node id="221">
        <label>chrono</label>
      </node>
      <node id="217">
        <label>boson/config/config.hpp</label>
      </node>
      <node id="206">
        <label>mangrove/config/compiler.hpp</label>
        <link refid="mangrove_2config_2compiler_8hpp_source"/>
      </node>
      <node id="207">
        <label>mangrove/config/config.hpp</label>
      </node>
      <node id="244">
        <label>bsoncxx/json.hpp</label>
      </node>
      <node id="209">
        <label>mangrove/config/version.hpp</label>
      </node>
      <node id="238">
        <label>cereal/types/vector.hpp</label>
      </node>
      <node id="222">
        <label>memory</label>
      </node>
      <node id="240">
        <label>istream</label>
      </node>
      <node id="245">
        <label>boson/config/postlude.hpp</label>
        <link refid="boson_2config_2postlude_8hpp_source"/>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="249">
        <label>src/mangrove/model.hpp</label>
        <link refid="model_8hpp_source"/>
      </node>
      <node id="247">
        <label>src/mangrove/deserializing_cursor.hpp</label>
        <link refid="deserializing_cursor.hpp"/>
        <childnode refid="248" relation="include">
        </childnode>
      </node>
      <node id="248">
        <label>src/mangrove/collection_wrapper.hpp</label>
        <link refid="collection__wrapper_8hpp_source"/>
        <childnode refid="249" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classmangrove_1_1deserializing__cursor" prot="public">mangrove::deserializing_cursor</innerclass>
    <innerclass refid="classmangrove_1_1deserializing__cursor_1_1iterator" prot="public">mangrove::deserializing_cursor::iterator</innerclass>
    <innernamespace refid="namespacemangrove">mangrove</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2016<sp/>MongoDB<sp/>Inc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;mangrove/config/prelude.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;bsoncxx/builder/basic/document.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;bsoncxx/stdx/optional.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;mongocxx/cursor.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boson/mapping_functions.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemangrove" kindref="compound">mangrove</ref><sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal">MANGROVE_INLINE_NAMESPACE_BEGIN</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="37" refid="classmangrove_1_1deserializing__cursor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmangrove_1_1deserializing__cursor" kindref="compound">deserializing_cursor</ref><sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmangrove_1_1deserializing__cursor" kindref="compound">deserializing_cursor</ref>(mongocxx::cursor&amp;&amp;<sp/>c)<sp/>:<sp/>_c(std::move(c))<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmangrove_1_1deserializing__cursor_1_1iterator" kindref="compound">iterator</ref>;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmangrove_1_1deserializing__cursor_1_1iterator" kindref="compound">iterator</ref><sp/>begin()<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmangrove_1_1deserializing__cursor_1_1iterator" kindref="compound">iterator</ref>(_c.begin(),<sp/>_c.end());</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmangrove_1_1deserializing__cursor_1_1iterator" kindref="compound">iterator</ref><sp/>end()<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmangrove_1_1deserializing__cursor_1_1iterator" kindref="compound">iterator</ref>(_c.end(),<sp/>_c.end());</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>mongocxx::cursor<sp/>_c;</highlight></codeline>
<codeline lineno="54"><highlight class="normal">};</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="57" refid="classmangrove_1_1deserializing__cursor_1_1iterator" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmangrove_1_1deserializing__cursor" kindref="compound">deserializing_cursor</ref>&lt;T&gt;::<ref refid="classmangrove_1_1deserializing__cursor_1_1iterator" kindref="compound">iterator</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>std::iterator&lt;std::input_iterator_tag,<sp/>T&gt;<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmangrove_1_1deserializing__cursor_1_1iterator" kindref="compound">iterator</ref>(mongocxx::cursor::iterator<sp/>ci,<sp/>mongocxx::cursor::iterator<sp/>ci_end)</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>_ci(ci),<sp/>_ci_end(ci_end)<sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>skip_invalid_documents();</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmangrove_1_1deserializing__cursor_1_1iterator" kindref="compound">iterator</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmangrove_1_1deserializing__cursor_1_1iterator" kindref="compound">deserializing_cursor::iterator</ref>&amp;<sp/>dsi)<sp/>:<sp/>_ci(dsi._ci),<sp/>_ci_end(dsi._ci_end)<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>skip_invalid_documents();</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmangrove_1_1deserializing__cursor_1_1iterator" kindref="compound">iterator</ref>&amp;<sp/>operator++()<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++_ci;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_opt<sp/>=<sp/>mongocxx::stdx::nullopt;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>skip_invalid_documents();</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>operator++(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>operator++();</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator==(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmangrove_1_1deserializing__cursor_1_1iterator" kindref="compound">iterator</ref>&amp;<sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_ci<sp/>==<sp/>rhs._ci;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator!=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmangrove_1_1deserializing__cursor_1_1iterator" kindref="compound">iterator</ref>&amp;<sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_ci<sp/>!=<sp/>rhs._ci;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="classmangrove_1_1deserializing__cursor_1_1iterator_1ae1f29c4a14cef45e2a259e17b3297a8e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/><ref refid="classmangrove_1_1deserializing__cursor_1_1iterator_1ae1f29c4a14cef45e2a259e17b3297a8e" kindref="member">operator*</ref>()<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_opt.value();</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>mongocxx::cursor::iterator<sp/>_ci;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Keeps<sp/>track<sp/>of<sp/>the<sp/>end<sp/>of<sp/>the<sp/>underlying<sp/>cursor<sp/>to<sp/>enable<sp/>skipping<sp/>invalid<sp/>documents.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>mongocxx::cursor::iterator<sp/>_ci_end;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Cached<sp/>object<sp/>value.<sp/>When<sp/>this<sp/>is<sp/>non-empty,<sp/>this<sp/>always<sp/>contains<sp/>the<sp/>current<sp/>object<sp/>pointed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>by<sp/>the<sp/>cursor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>mongocxx::stdx::optional&lt;T&gt;<sp/>_opt;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>skip_invalid_documents()<sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(_ci<sp/>!=<sp/>_ci_end)<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!_opt)<sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_opt<sp/>=<sp/>boson::to_obj&lt;T&gt;(*_ci);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(<ref refid="structboson_1_1Exception" kindref="compound">boson::Exception</ref>&amp;<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++_ci;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_opt<sp/>=<sp/>mongocxx::stdx::nullopt;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal">};</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal">MANGROVE_INLINE_NAMESPACE_END</highlight></codeline>
<codeline lineno="127"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>boson</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;mangrove/config/postlude.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/mangrove/deserializing_cursor.hpp"/>
  </compounddef>
</doxygen>
