<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classmongo__odm_1_1push__update__expr" kind="class" language="C++" prot="public">
    <compoundname>mongo_odm::push_update_expr</compoundname>
    <includes refid="query__builder_8hpp" local="no">query_builder.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename NvpT</type>
      </param>
      <param>
        <type>typename U</type>
      </param>
      <param>
        <type>typename Sort</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classmongo__odm_1_1push__update__expr_1a03b0aacab2f83a917248add153006324" prot="public" static="no">
        <type>NvpT</type>
        <definition>using mongo_odm::push_update_expr&lt; NvpT, U, Sort &gt;::field_type =  NvpT</definition>
        <argsstring></argsstring>
        <name>field_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/mongo_odm/query_builder.hpp" line="937" column="1" bodyfile="src/mongo_odm/query_builder.hpp" bodystart="937" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classmongo__odm_1_1push__update__expr_1a410fd6ba84a7483b90259ca2a20ce68d" prot="private" static="no" mutable="no">
        <type>const NvpT</type>
        <definition>const NvpT mongo_odm::push_update_expr&lt; NvpT, U, Sort &gt;::_nvp</definition>
        <argsstring></argsstring>
        <name>_nvp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/mongo_odm/query_builder.hpp" line="1090" column="1" bodyfile="src/mongo_odm/query_builder.hpp" bodystart="1090" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmongo__odm_1_1push__update__expr_1af2b7742f4b65107bc17f9ee86b6f3357" prot="private" static="no" mutable="no">
        <type>const U &amp;</type>
        <definition>const U&amp; mongo_odm::push_update_expr&lt; NvpT, U, Sort &gt;::_val</definition>
        <argsstring></argsstring>
        <name>_val</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/mongo_odm/query_builder.hpp" line="1091" column="1" bodyfile="src/mongo_odm/query_builder.hpp" bodystart="1091" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmongo__odm_1_1push__update__expr_1a09ea2799cca1ead8dfdb755344d69d1f" prot="private" static="no" mutable="no">
        <type>const bool</type>
        <definition>const bool mongo_odm::push_update_expr&lt; NvpT, U, Sort &gt;::_each</definition>
        <argsstring></argsstring>
        <name>_each</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/mongo_odm/query_builder.hpp" line="1092" column="1" bodyfile="src/mongo_odm/query_builder.hpp" bodystart="1092" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmongo__odm_1_1push__update__expr_1a96e460a9021bff0040a65ec2768519e3" prot="private" static="no" mutable="no">
        <type>const bsoncxx::stdx::optional&lt; std::int32_t &gt;</type>
        <definition>const bsoncxx::stdx::optional&lt;std::int32_t&gt; mongo_odm::push_update_expr&lt; NvpT, U, Sort &gt;::_slice</definition>
        <argsstring></argsstring>
        <name>_slice</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/mongo_odm/query_builder.hpp" line="1093" column="1" bodyfile="src/mongo_odm/query_builder.hpp" bodystart="1093" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmongo__odm_1_1push__update__expr_1a12560aada179b6dbac86b342c3410a8d" prot="private" static="no" mutable="no">
        <type>const bsoncxx::stdx::optional&lt; Sort &gt;</type>
        <definition>const bsoncxx::stdx::optional&lt;Sort&gt; mongo_odm::push_update_expr&lt; NvpT, U, Sort &gt;::_sort</definition>
        <argsstring></argsstring>
        <name>_sort</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/mongo_odm/query_builder.hpp" line="1094" column="1" bodyfile="src/mongo_odm/query_builder.hpp" bodystart="1094" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmongo__odm_1_1push__update__expr_1ad18b18ac826794190e730780f662141d" prot="private" static="no" mutable="no">
        <type>const bsoncxx::stdx::optional&lt; std::uint32_t &gt;</type>
        <definition>const bsoncxx::stdx::optional&lt;std::uint32_t&gt; mongo_odm::push_update_expr&lt; NvpT, U, Sort &gt;::_position</definition>
        <argsstring></argsstring>
        <name>_position</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/mongo_odm/query_builder.hpp" line="1095" column="1" bodyfile="src/mongo_odm/query_builder.hpp" bodystart="1095" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmongo__odm_1_1push__update__expr_1a8268dfd7d8a1e682ae950d7399d26f54" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr mongo_odm::push_update_expr&lt; NvpT, U, Sort &gt;::push_update_expr</definition>
        <argsstring>(const NvpT &amp;nvp, const U &amp;val, bool each, bsoncxx::stdx::optional&lt; std::int32_t &gt; slice=bsoncxx::stdx::nullopt, const bsoncxx::stdx::optional&lt; Sort &gt; &amp;sort=bsoncxx::stdx::nullopt, bsoncxx::stdx::optional&lt; std::uint32_t &gt; position=bsoncxx::stdx::nullopt)</argsstring>
        <name>push_update_expr</name>
        <param>
          <type>const NvpT &amp;</type>
          <declname>nvp</declname>
        </param>
        <param>
          <type>const U &amp;</type>
          <declname>val</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>each</declname>
        </param>
        <param>
          <type>bsoncxx::stdx::optional&lt; std::int32_t &gt;</type>
          <declname>slice</declname>
          <defval>bsoncxx::stdx::nullopt</defval>
        </param>
        <param>
          <type>const bsoncxx::stdx::optional&lt; Sort &gt; &amp;</type>
          <declname>sort</declname>
          <defval>bsoncxx::stdx::nullopt</defval>
        </param>
        <param>
          <type>bsoncxx::stdx::optional&lt; std::uint32_t &gt;</type>
          <declname>position</declname>
          <defval>bsoncxx::stdx::nullopt</defval>
        </param>
        <briefdescription>
<para>Constructs a $push expression, with the given optional modifiers. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nvp</parametername>
</parameternamelist>
<parameterdescription>
<para>The field to modify </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>The value to append to the field </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>each</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether to append a single value, or a bunch of values in an array. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>slice</parametername>
</parameternamelist>
<parameterdescription>
<para>An optional value to give the $slice modifier. This only takes effect with each=true. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sort</parametername>
</parameternamelist>
<parameterdescription>
<para>An optional value to give the $sort modifier. This only takes effect with each=true. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>position</parametername>
</parameternamelist>
<parameterdescription>
<para>An optional value to give the $position modifier. This only takes effect with each=true. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/mongo_odm/query_builder.hpp" line="952" column="1" bodyfile="src/mongo_odm/query_builder.hpp" bodystart="952" bodyend="958"/>
      </memberdef>
      <memberdef kind="function" id="classmongo__odm_1_1push__update__expr_1a55d76eef6ebc8a1ba154a6e3a4245932" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr <ref refid="classmongo__odm_1_1push__update__expr" kindref="compound">push_update_expr</ref>&lt; NvpT, U, Sort &gt;</type>
        <definition>constexpr push_update_expr&lt;NvpT, U, Sort&gt; mongo_odm::push_update_expr&lt; NvpT, U, Sort &gt;::slice</definition>
        <argsstring>(std::int32_t slice)</argsstring>
        <name>slice</name>
        <param>
          <type>std::int32_t</type>
          <declname>slice</declname>
        </param>
        <briefdescription>
<para>Create a copy of this expression with a different $slice modifier value. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>slice</parametername>
</parameternamelist>
<parameterdescription>
<para>The integer value of the $slice modifier. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A new <ref refid="classmongo__odm_1_1push__update__expr" kindref="compound">push_update_expr</ref> with the same properties as this one, except a different $slice modifier. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/mongo_odm/query_builder.hpp" line="970" column="1" bodyfile="src/mongo_odm/query_builder.hpp" bodystart="970" bodyend="972"/>
      </memberdef>
      <memberdef kind="function" id="classmongo__odm_1_1push__update__expr_1a3ca32e674928879d958c81f162f43c73" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr <ref refid="classmongo__odm_1_1push__update__expr" kindref="compound">push_update_expr</ref>&lt; NvpT, U, Sort &gt;</type>
        <definition>constexpr push_update_expr&lt;NvpT, U, Sort&gt; mongo_odm::push_update_expr&lt; NvpT, U, Sort &gt;::slice</definition>
        <argsstring>()</argsstring>
        <name>slice</name>
        <briefdescription>
<para>Create a copy of this expression without a $slice modifier. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A new <ref refid="classmongo__odm_1_1push__update__expr" kindref="compound">push_update_expr</ref> with the same properties as this one, except a different $slice modifier. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/mongo_odm/query_builder.hpp" line="980" column="1" bodyfile="src/mongo_odm/query_builder.hpp" bodystart="980" bodyend="982"/>
      </memberdef>
      <memberdef kind="function" id="classmongo__odm_1_1push__update__expr_1a563708e3931d6f428e0ec6f9efa58b54" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename OtherNvpT</type>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="classmongo__odm_1_1push__update__expr" kindref="compound">push_update_expr</ref>&lt; NvpT, U, <ref refid="classmongo__odm_1_1sort__expr" kindref="compound">sort_expr</ref>&lt; OtherNvpT &gt; &gt;</type>
        <definition>constexpr push_update_expr&lt;NvpT, U, sort_expr&lt;OtherNvpT&gt; &gt; mongo_odm::push_update_expr&lt; NvpT, U, Sort &gt;::sort</definition>
        <argsstring>(const sort_expr&lt; OtherNvpT &gt; &amp;sort)</argsstring>
        <name>sort</name>
        <param>
          <type>const <ref refid="classmongo__odm_1_1sort__expr" kindref="compound">sort_expr</ref>&lt; OtherNvpT &gt; &amp;</type>
          <declname>sort</declname>
        </param>
        <briefdescription>
<para>Create a copy of this expression with a different $sort modifier value. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>OtherNvpT</parametername>
</parameternamelist>
<parameterdescription>
<para>The name-value-pair used by the given Sort Expression. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sort</parametername>
</parameternamelist>
<parameterdescription>
<para>The sort expression to use. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A new <ref refid="classmongo__odm_1_1push__update__expr" kindref="compound">push_update_expr</ref> with the same properties as this one, except a different $sort modifier. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/mongo_odm/query_builder.hpp" line="993" column="1" bodyfile="src/mongo_odm/query_builder.hpp" bodystart="993" bodyend="996"/>
      </memberdef>
      <memberdef kind="function" id="classmongo__odm_1_1push__update__expr_1a690edf21a68ce63bd576cc94e9a34f0f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr <ref refid="classmongo__odm_1_1push__update__expr" kindref="compound">push_update_expr</ref>&lt; NvpT, U, int &gt;</type>
        <definition>constexpr push_update_expr&lt;NvpT, U, int&gt; mongo_odm::push_update_expr&lt; NvpT, U, Sort &gt;::sort</definition>
        <argsstring>(int sort)</argsstring>
        <name>sort</name>
        <param>
          <type>int</type>
          <declname>sort</declname>
        </param>
        <briefdescription>
<para>Create a copy of this expression with a different $slice modifier value. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sort</parametername>
</parameternamelist>
<parameterdescription>
<para>The integer value of the $sort modifier, +/-1. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A new <ref refid="classmongo__odm_1_1push__update__expr" kindref="compound">push_update_expr</ref> with the same properties as this one, except a different $sort modifier. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/mongo_odm/query_builder.hpp" line="1005" column="1" bodyfile="src/mongo_odm/query_builder.hpp" bodystart="1005" bodyend="1007"/>
      </memberdef>
      <memberdef kind="function" id="classmongo__odm_1_1push__update__expr_1a95965b5ab76f0e6da15de477fad2e829" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr <ref refid="classmongo__odm_1_1push__update__expr" kindref="compound">push_update_expr</ref>&lt; NvpT, U, Sort &gt;</type>
        <definition>constexpr push_update_expr&lt;NvpT, U, Sort&gt; mongo_odm::push_update_expr&lt; NvpT, U, Sort &gt;::sort</definition>
        <argsstring>()</argsstring>
        <name>sort</name>
        <briefdescription>
<para>Create a copy of this expression without a $sort modifier. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A new <ref refid="classmongo__odm_1_1push__update__expr" kindref="compound">push_update_expr</ref> with the same properties as this one, except a different $sort modifier. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/mongo_odm/query_builder.hpp" line="1015" column="1" bodyfile="src/mongo_odm/query_builder.hpp" bodystart="1015" bodyend="1017"/>
      </memberdef>
      <memberdef kind="function" id="classmongo__odm_1_1push__update__expr_1adb225c5e9549be9c7d790aff4bdcf856" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr <ref refid="classmongo__odm_1_1push__update__expr" kindref="compound">push_update_expr</ref>&lt; NvpT, U, Sort &gt;</type>
        <definition>constexpr push_update_expr&lt;NvpT, U, Sort&gt; mongo_odm::push_update_expr&lt; NvpT, U, Sort &gt;::position</definition>
        <argsstring>(std::uint32_t position)</argsstring>
        <name>position</name>
        <param>
          <type>std::uint32_t</type>
          <declname>position</declname>
        </param>
        <briefdescription>
<para>Create a copy of this expression with a different $position modifier value. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>position</parametername>
</parameternamelist>
<parameterdescription>
<para>The integer value of the $position modifier. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A new <ref refid="classmongo__odm_1_1push__update__expr" kindref="compound">push_update_expr</ref> with the same properties as this one, except a different $position modifier. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/mongo_odm/query_builder.hpp" line="1026" column="1" bodyfile="src/mongo_odm/query_builder.hpp" bodystart="1026" bodyend="1028"/>
      </memberdef>
      <memberdef kind="function" id="classmongo__odm_1_1push__update__expr_1a3875e3422e3c659c1bcc71a3632058b7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr <ref refid="classmongo__odm_1_1push__update__expr" kindref="compound">push_update_expr</ref>&lt; NvpT, U, Sort &gt;</type>
        <definition>constexpr push_update_expr&lt;NvpT, U, Sort&gt; mongo_odm::push_update_expr&lt; NvpT, U, Sort &gt;::position</definition>
        <argsstring>()</argsstring>
        <name>position</name>
        <briefdescription>
<para>Create a copy of this expression without $position modifier. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A new <ref refid="classmongo__odm_1_1push__update__expr" kindref="compound">push_update_expr</ref> with the same properties as this one, except a different $position modifier. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/mongo_odm/query_builder.hpp" line="1036" column="1" bodyfile="src/mongo_odm/query_builder.hpp" bodystart="1036" bodyend="1038"/>
      </memberdef>
      <memberdef kind="function" id="classmongo__odm_1_1push__update__expr_1afa0ecdb64932eff8dd929b7f108a1441" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void mongo_odm::push_update_expr&lt; NvpT, U, Sort &gt;::append_to_bson</definition>
        <argsstring>(bsoncxx::builder::core &amp;builder, bool wrap=false) const </argsstring>
        <name>append_to_bson</name>
        <param>
          <type>bsoncxx::builder::core &amp;</type>
          <declname>builder</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>wrap</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Appends this query to a BSON core builder as an expression &apos;. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="rcs"><title>push</title><para>{field: value | {</para></simplesect>
each: value, $modifiers: params...}}&apos; <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>builder</parametername>
</parameternamelist>
<parameterdescription>
<para>A basic BSON core builder. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Whether</parametername>
</parameternamelist>
<parameterdescription>
<para>to wrap this expression inside a document. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/mongo_odm/query_builder.hpp" line="1046" column="1" bodyfile="src/mongo_odm/query_builder.hpp" bodystart="1046" bodyend="1081"/>
      </memberdef>
      <memberdef kind="function" id="classmongo__odm_1_1push__update__expr_1a1fada157bb94b50250a38554afe89074" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>mongo_odm::push_update_expr&lt; NvpT, U, Sort &gt;::operator bsoncxx::document::view_or_value</definition>
        <argsstring>() const </argsstring>
        <name>operator bsoncxx::document::view_or_value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/mongo_odm/query_builder.hpp" line="1083" column="1" bodyfile="src/mongo_odm/query_builder.hpp" bodystart="1083" bodyend="1087"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Represents an array update epression that uses the $push operator. </para>    </briefdescription>
    <detaileddescription>
<para>Modifiers can be set either in the constructor, or by calling the corresponding member functions. <parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>NvpT</parametername>
</parameternamelist>
<parameterdescription>
<para>The name-value-pair type of the corresponding field. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>U</parametername>
</parameternamelist>
<parameterdescription>
<para>The value being $push&apos;ed to the array </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Sort</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the sort expression used in the $sort modifier. This can be either an integer, +/- 1, or a <ref refid="classmongo__odm_1_1sort__expr" kindref="compound">sort_expr</ref>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>    </detaileddescription>
    <location file="src/mongo_odm/expression_syntax.hpp" line="89" column="1" bodyfile="src/mongo_odm/expression_syntax.hpp" bodystart="89" bodyend="-1"/>
    <listofallmembers>
      <member refid="classmongo__odm_1_1push__update__expr_1a09ea2799cca1ead8dfdb755344d69d1f" prot="private" virt="non-virtual"><scope>mongo_odm::push_update_expr</scope><name>_each</name></member>
      <member refid="classmongo__odm_1_1push__update__expr_1a410fd6ba84a7483b90259ca2a20ce68d" prot="private" virt="non-virtual"><scope>mongo_odm::push_update_expr</scope><name>_nvp</name></member>
      <member refid="classmongo__odm_1_1push__update__expr_1ad18b18ac826794190e730780f662141d" prot="private" virt="non-virtual"><scope>mongo_odm::push_update_expr</scope><name>_position</name></member>
      <member refid="classmongo__odm_1_1push__update__expr_1a96e460a9021bff0040a65ec2768519e3" prot="private" virt="non-virtual"><scope>mongo_odm::push_update_expr</scope><name>_slice</name></member>
      <member refid="classmongo__odm_1_1push__update__expr_1a12560aada179b6dbac86b342c3410a8d" prot="private" virt="non-virtual"><scope>mongo_odm::push_update_expr</scope><name>_sort</name></member>
      <member refid="classmongo__odm_1_1push__update__expr_1af2b7742f4b65107bc17f9ee86b6f3357" prot="private" virt="non-virtual"><scope>mongo_odm::push_update_expr</scope><name>_val</name></member>
      <member refid="classmongo__odm_1_1push__update__expr_1afa0ecdb64932eff8dd929b7f108a1441" prot="public" virt="non-virtual"><scope>mongo_odm::push_update_expr</scope><name>append_to_bson</name></member>
      <member refid="classmongo__odm_1_1push__update__expr_1a03b0aacab2f83a917248add153006324" prot="public" virt="non-virtual"><scope>mongo_odm::push_update_expr</scope><name>field_type</name></member>
      <member refid="classmongo__odm_1_1push__update__expr_1a1fada157bb94b50250a38554afe89074" prot="public" virt="non-virtual"><scope>mongo_odm::push_update_expr</scope><name>operator bsoncxx::document::view_or_value</name></member>
      <member refid="classmongo__odm_1_1push__update__expr_1adb225c5e9549be9c7d790aff4bdcf856" prot="public" virt="non-virtual"><scope>mongo_odm::push_update_expr</scope><name>position</name></member>
      <member refid="classmongo__odm_1_1push__update__expr_1a3875e3422e3c659c1bcc71a3632058b7" prot="public" virt="non-virtual"><scope>mongo_odm::push_update_expr</scope><name>position</name></member>
      <member refid="classmongo__odm_1_1push__update__expr_1a8268dfd7d8a1e682ae950d7399d26f54" prot="public" virt="non-virtual"><scope>mongo_odm::push_update_expr</scope><name>push_update_expr</name></member>
      <member refid="classmongo__odm_1_1push__update__expr_1a55d76eef6ebc8a1ba154a6e3a4245932" prot="public" virt="non-virtual"><scope>mongo_odm::push_update_expr</scope><name>slice</name></member>
      <member refid="classmongo__odm_1_1push__update__expr_1a3ca32e674928879d958c81f162f43c73" prot="public" virt="non-virtual"><scope>mongo_odm::push_update_expr</scope><name>slice</name></member>
      <member refid="classmongo__odm_1_1push__update__expr_1a563708e3931d6f428e0ec6f9efa58b54" prot="public" virt="non-virtual"><scope>mongo_odm::push_update_expr</scope><name>sort</name></member>
      <member refid="classmongo__odm_1_1push__update__expr_1a690edf21a68ce63bd576cc94e9a34f0f" prot="public" virt="non-virtual"><scope>mongo_odm::push_update_expr</scope><name>sort</name></member>
      <member refid="classmongo__odm_1_1push__update__expr_1a95965b5ab76f0e6da15de477fad2e829" prot="public" virt="non-virtual"><scope>mongo_odm::push_update_expr</scope><name>sort</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
