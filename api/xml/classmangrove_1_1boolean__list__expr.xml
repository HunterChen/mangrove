<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classmangrove_1_1boolean__list__expr" kind="class" language="C++" prot="public">
    <compoundname>mangrove::boolean_list_expr</compoundname>
    <includes refid="query__builder_8hpp" local="no">query_builder.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename List</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classmangrove_1_1boolean__list__expr_1a5bc34ccd0b0a31cfc64ba1c1d7ad75a1" prot="public" static="no" mutable="no">
        <type>const List</type>
        <definition>const List mangrove::boolean_list_expr&lt; List &gt;::_args</definition>
        <argsstring></argsstring>
        <name>_args</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/mangrove/query_builder.hpp" line="651" column="1" bodyfile="src/mangrove/query_builder.hpp" bodystart="651" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmangrove_1_1boolean__list__expr_1aedb394a3a4a53d436a413537363461d5" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* mangrove::boolean_list_expr&lt; List &gt;::_op</definition>
        <argsstring></argsstring>
        <name>_op</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/mangrove/query_builder.hpp" line="652" column="1" bodyfile="src/mangrove/query_builder.hpp" bodystart="652" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmangrove_1_1boolean__list__expr_1a77c13709826f8381f4b8da4ef127c45c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr mangrove::boolean_list_expr&lt; List &gt;::boolean_list_expr</definition>
        <argsstring>(const List args, const char *op)</argsstring>
        <name>boolean_list_expr</name>
        <param>
          <type>const List</type>
          <declname>args</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>op</declname>
        </param>
        <briefdescription>
<para>Constructs a boolean expression from a list of sub-expressions, and a certain operator. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>args</parametername>
</parameternamelist>
<parameterdescription>
<para>An expression list of boolean conditions. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>op</parametername>
</parameternamelist>
<parameterdescription>
<para>The operator of the expression, e.g. AND or OR. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/mangrove/query_builder.hpp" line="620" column="1" bodyfile="src/mangrove/query_builder.hpp" bodystart="620" bodyend="621"/>
      </memberdef>
      <memberdef kind="function" id="classmangrove_1_1boolean__list__expr_1a75f8fbf2d2c078dd1c211e895c7949db" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void mangrove::boolean_list_expr&lt; List &gt;::append_to_bson</definition>
        <argsstring>(bsoncxx::builder::core &amp;builder, bool wrap=false) const </argsstring>
        <name>append_to_bson</name>
        <param>
          <type>bsoncxx::builder::core &amp;</type>
          <declname>builder</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>wrap</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Appends this query to a BSON core builder as a key-value pair &quot;$op: [{lhs}, {rhs}]&quot;. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>builder</parametername>
</parameternamelist>
<parameterdescription>
<para>A basic BSON core builder. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>wrap</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether to wrap this expression inside a document. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/mangrove/query_builder.hpp" line="628" column="1" bodyfile="src/mangrove/query_builder.hpp" bodystart="628" bodyend="639"/>
      </memberdef>
      <memberdef kind="function" id="classmangrove_1_1boolean__list__expr_1aab12e391dd1a0bf8ae2398f9eb277399" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>mangrove::boolean_list_expr&lt; List &gt;::operator bsoncxx::document::view_or_value</definition>
        <argsstring>() const </argsstring>
        <name>operator bsoncxx::document::view_or_value</name>
        <briefdescription>
<para>Converts the expression to a BSON filter for a query, in the form &quot;{$op: [{arg1}, {arg2}, ...]}&quot;. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/mangrove/query_builder.hpp" line="645" column="1" bodyfile="src/mangrove/query_builder.hpp" bodystart="645" bodyend="649"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This class represents a boolean expression over an array of arguments. </para>    </briefdescription>
    <detaileddescription>
<para>This is particularly useful for the $nor operator. When converted to BSON, this class produces an expression {$op: [{arg1}, {arg2}, ...]} </para>    </detaileddescription>
    <location file="src/mangrove/expression_syntax.hpp" line="71" column="1" bodyfile="src/mangrove/expression_syntax.hpp" bodystart="71" bodyend="-1"/>
    <listofallmembers>
      <member refid="classmangrove_1_1boolean__list__expr_1a5bc34ccd0b0a31cfc64ba1c1d7ad75a1" prot="public" virt="non-virtual"><scope>mangrove::boolean_list_expr</scope><name>_args</name></member>
      <member refid="classmangrove_1_1boolean__list__expr_1aedb394a3a4a53d436a413537363461d5" prot="public" virt="non-virtual"><scope>mangrove::boolean_list_expr</scope><name>_op</name></member>
      <member refid="classmangrove_1_1boolean__list__expr_1a75f8fbf2d2c078dd1c211e895c7949db" prot="public" virt="non-virtual"><scope>mangrove::boolean_list_expr</scope><name>append_to_bson</name></member>
      <member refid="classmangrove_1_1boolean__list__expr_1a77c13709826f8381f4b8da4ef127c45c" prot="public" virt="non-virtual"><scope>mangrove::boolean_list_expr</scope><name>boolean_list_expr</name></member>
      <member refid="classmangrove_1_1boolean__list__expr_1aab12e391dd1a0bf8ae2398f9eb277399" prot="public" virt="non-virtual"><scope>mangrove::boolean_list_expr</scope><name>operator bsoncxx::document::view_or_value</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
