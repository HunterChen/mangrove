<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classmongo__odm_1_1sort__expr" kind="class" language="C++" prot="public">
    <compoundname>mongo_odm::sort_expr</compoundname>
    <includes refid="query__builder_8hpp" local="no">query_builder.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename NvpT</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classmongo__odm_1_1sort__expr_1a4120160f0f9925de677134422ce17817" prot="public" static="no">
        <type>NvpT</type>
        <definition>using mongo_odm::sort_expr&lt; NvpT &gt;::field_type =  NvpT</definition>
        <argsstring></argsstring>
        <name>field_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/mongo_odm/query_builder.hpp" line="113" column="1" bodyfile="src/mongo_odm/query_builder.hpp" bodystart="113" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classmongo__odm_1_1sort__expr_1a41f10ccbdc98cbcd2b4e0752dac5cf8d" prot="private" static="no" mutable="no">
        <type>const NvpT</type>
        <definition>const NvpT mongo_odm::sort_expr&lt; NvpT &gt;::_nvp</definition>
        <argsstring></argsstring>
        <name>_nvp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/mongo_odm/query_builder.hpp" line="153" column="1" bodyfile="src/mongo_odm/query_builder.hpp" bodystart="153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmongo__odm_1_1sort__expr_1a01fb4635d90884a42e5e49b5b0723759" prot="private" static="no" mutable="no">
        <type>const bool</type>
        <definition>const bool mongo_odm::sort_expr&lt; NvpT &gt;::_ascending</definition>
        <argsstring></argsstring>
        <name>_ascending</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/mongo_odm/query_builder.hpp" line="154" column="1" bodyfile="src/mongo_odm/query_builder.hpp" bodystart="154" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmongo__odm_1_1sort__expr_1ac3e032a5c08cb386b68bca201ee3a50d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr mongo_odm::sort_expr&lt; NvpT &gt;::sort_expr</definition>
        <argsstring>(const NvpT &amp;nvp, bool ascending)</argsstring>
        <name>sort_expr</name>
        <param>
          <type>const NvpT &amp;</type>
          <declname>nvp</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>ascending</declname>
        </param>
        <briefdescription>
<para>Creates a sort expression with the given name-value-pair and sort order. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nvp</parametername>
</parameternamelist>
<parameterdescription>
<para>The name-value pair to order against. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ascending</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether to use ascending (true) or descending (false) order. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/mongo_odm/query_builder.hpp" line="119" column="1" bodyfile="src/mongo_odm/query_builder.hpp" bodystart="119" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="classmongo__odm_1_1sort__expr_1a304f862be95da026075eb76e007391be" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void mongo_odm::sort_expr&lt; NvpT &gt;::append_to_bson</definition>
        <argsstring>(bsoncxx::builder::core &amp;builder, bool wrap=false) const </argsstring>
        <name>append_to_bson</name>
        <param>
          <type>bsoncxx::builder::core &amp;</type>
          <declname>builder</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>wrap</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Appends this expression to a BSON core builder, as a key-value pair of the form &quot;key: +/-1&quot;. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>builder</parametername>
</parameternamelist>
<parameterdescription>
<para>A BSON core builder </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>wrap</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether to wrap the BSON inside a document. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/mongo_odm/query_builder.hpp" line="128" column="1" bodyfile="src/mongo_odm/query_builder.hpp" bodystart="128" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="classmongo__odm_1_1sort__expr_1ad66e7dd012b0be9916b3295646058841" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>mongo_odm::sort_expr&lt; NvpT &gt;::operator bsoncxx::document::view_or_value</definition>
        <argsstring>() const </argsstring>
        <name>operator bsoncxx::document::view_or_value</name>
        <briefdescription>
<para>Converts the expression to a BSON filter for a query. </para>        </briefdescription>
        <detaileddescription>
<para>The resulting BSON is of the form &quot;{key: +/-1}&quot; </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/mongo_odm/query_builder.hpp" line="146" column="1" bodyfile="src/mongo_odm/query_builder.hpp" bodystart="146" bodyend="150"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>An expression that represents a sorting order. </para>    </briefdescription>
    <detaileddescription>
<para>This consists of a name-value pair and a boolean specifying ascending or descending sort order. The resulting BSON is {field: +/-1}, where +/-1 corresponds to the sort order. </para>    </detaileddescription>
    <location file="src/mongo_odm/expression_syntax.hpp" line="48" column="1" bodyfile="src/mongo_odm/expression_syntax.hpp" bodystart="48" bodyend="-1"/>
    <listofallmembers>
      <member refid="classmongo__odm_1_1sort__expr_1a01fb4635d90884a42e5e49b5b0723759" prot="private" virt="non-virtual"><scope>mongo_odm::sort_expr</scope><name>_ascending</name></member>
      <member refid="classmongo__odm_1_1sort__expr_1a41f10ccbdc98cbcd2b4e0752dac5cf8d" prot="private" virt="non-virtual"><scope>mongo_odm::sort_expr</scope><name>_nvp</name></member>
      <member refid="classmongo__odm_1_1sort__expr_1a304f862be95da026075eb76e007391be" prot="public" virt="non-virtual"><scope>mongo_odm::sort_expr</scope><name>append_to_bson</name></member>
      <member refid="classmongo__odm_1_1sort__expr_1a4120160f0f9925de677134422ce17817" prot="public" virt="non-virtual"><scope>mongo_odm::sort_expr</scope><name>field_type</name></member>
      <member refid="classmongo__odm_1_1sort__expr_1ad66e7dd012b0be9916b3295646058841" prot="public" virt="non-virtual"><scope>mongo_odm::sort_expr</scope><name>operator bsoncxx::document::view_or_value</name></member>
      <member refid="classmongo__odm_1_1sort__expr_1ac3e032a5c08cb386b68bca201ee3a50d" prot="public" virt="non-virtual"><scope>mongo_odm::sort_expr</scope><name>sort_expr</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
